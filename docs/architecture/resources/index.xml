<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>HobbyFarm Documentation – Resources</title><link>http://hobbyfarm.github.io/docs/architecture/resources/</link><description>Recent content in Resources on HobbyFarm Documentation</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://hobbyfarm.github.io/docs/architecture/resources/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Course</title><link>http://hobbyfarm.github.io/docs/architecture/resources/course/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://hobbyfarm.github.io/docs/architecture/resources/course/</guid><description>
&lt;p>A course is a collection of scenarios meant to be consumed as a single unit or as a series of individual sessions (configurable). A course is useful in situations where you want to group related learnings together or provide a day&amp;rsquo;s worth of curriculum to students who can retain their VMs from scenario to scenario.&lt;/p>
&lt;p>Here&amp;rsquo;s an example course:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm.io/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Course&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">example-course&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm-system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">RXhhbXBsZSBDb3Vyc2UK&lt;/span> &lt;span style="color:#75715e"># &amp;#34;Example Course&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">description&lt;/span>: &lt;span style="color:#ae81ff">VGhpcyBpcyBhbiBleGFtcGxlIGNvdXJzZQo=&lt;/span> &lt;span style="color:#75715e"># &amp;#34;This is an example course&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">scenarios&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">scenario-one&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">scenario-two&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">categories&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">cool-courses&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">day-one-content&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">virtual_machines&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">machine01&lt;/span>: &lt;span style="color:#ae81ff">ubuntu-2004&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cluster01&lt;/span>: &lt;span style="color:#ae81ff">sles-15-sp4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">keepalive_duration&lt;/span>: &lt;span style="color:#ae81ff">90m&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">pause_duration&lt;/span>: &lt;span style="color:#ae81ff">4h&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">pauseable&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">keep_vm&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;h3 id="name">&lt;code>name&lt;/code>&lt;/h3>
&lt;p>Display name for the course as shown in both the end-user UI and admin UI. This field should be base64 encoded.&lt;/p>
&lt;h3 id="description">&lt;code>description&lt;/code>&lt;/h3>
&lt;p>A brief description of the course shown under the title in the end-user UI. This field should be base64 encoded.&lt;/p>
&lt;h3 id="scenarios">&lt;code>scenarios&lt;/code>&lt;/h3>
&lt;p>This field defines the scenarios that comprise the course. Scenarios are displayed in the order they are defined in this list. Each entry in this list is the &lt;code>name&lt;/code> (&lt;code>id&lt;/code>) of the scenario.&lt;/p>
&lt;h3 id="categories">&lt;code>categories&lt;/code>&lt;/h3>
&lt;p>This field allows a course to select scenarios &lt;em>dynamically&lt;/em> based on the categories applied to the scenario. A basic query format is used to match categories of scenarios. Any scenarios that match are included with the course _in addition to any scenarios defined in the &lt;a href="#scenarios">scenarios&lt;/a> field.&lt;/p>
&lt;p>From the admin UI, here are some example query strings:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Query&lt;/th>
&lt;th>Effect&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>kubernetes&lt;/code>&lt;/td>
&lt;td>All scenarios with category &lt;code>kubernetes&lt;/code> are included.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>!kubernetes&lt;/code>&lt;/td>
&lt;td>All scenarios that are not in the &lt;code>kubernetes&lt;/code> category are included.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kubernetes&amp;amp;basic&lt;/code>&lt;/td>
&lt;td>Scenarios that have &lt;em>both&lt;/em> the &lt;code>kubernetes&lt;/code> &lt;em>and&lt;/em> &lt;code>basic&lt;/code> categories are included.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kubernetes&amp;amp;k3s&amp;amp;basic&lt;/code>&lt;/td>
&lt;td>Queries can work with more than two categories.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>kubernetes&amp;amp;!basic&lt;/code>&lt;/td>
&lt;td>All Scenarios that are in the &lt;code>kubernetes&lt;/code> category, but not in the &lt;code>basic&lt;/code> category.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>example&amp;amp;!example&lt;/code>&lt;/td>
&lt;td>This query will never match any scenarios.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="virtual_machines">&lt;code>virtual_machines&lt;/code>&lt;/h3>
&lt;p>This field is a &lt;code>map[string]string&lt;/code> listing each virtual machine that is required for the course. The key is the name of the VM (as used in both the end-user UI &lt;em>and&lt;/em> the variable content in the steps), and the value is the VM template which &amp;ldquo;backs&amp;rdquo; that VM.&lt;/p>
&lt;p>This field must define all VMs which are used for the scenarios that this course contains. A scenario may fail to execute if the course does not define a matching VM in this map for that scenario.&lt;/p>
&lt;h3 id="keepalive_duration">&lt;code>keepalive_duration&lt;/code>&lt;/h3>
&lt;p>This field defines the duration of time after which a user&amp;rsquo;s VMs can be destroyed by HobbyFarm upon user inactivity. In other words, if a user becomes inactive (their instance of the end-user UI stops sending pings to the server) this is the duration of time HobbyFarm will wait before reclaiming their resources.&lt;/p>
&lt;p>Acceptable values for this field are of the form &lt;code>XXm&lt;/code> or &lt;code>XXh&lt;/code> where &lt;code>XX&lt;/code> is a positive integer that denotes minutes or hours of time.&lt;/p>
&lt;h3 id="pause_duration">&lt;code>pause_duration&lt;/code>&lt;/h3>
&lt;p>This field defines the duration of time a user is able to pause their session. The end-user UI contains a button that allows (if enabled) a user to stop the keepalive countdown. This permits the user to take actions that otherwise may result in VM teardown, such as closing their laptop or disconnecting their Internet connection. If a user pauses their session, HobbyFarm will wait until this duration expires before once again reenabling the keepalive duration. Thus the maximum time a user can be paused &lt;em>and&lt;/em> inactive is the sum of &lt;code>keepalive_duration&lt;/code> and &lt;code>pause_duration&lt;/code>.&lt;/p>
&lt;p>Acceptable values for this field are of the form &lt;code>XXm&lt;/code> or &lt;code>XXh&lt;/code> where &lt;code>XX&lt;/code> is a positive integer that denotes minutes or hours of time.&lt;/p>
&lt;h3 id="pauseable">&lt;code>pauseable&lt;/code>&lt;/h3>
&lt;p>This field determines whether an end-user may pause their session. &lt;code>true&lt;/code> enables the pausing of sessions, &lt;code>false&lt;/code> disables it.&lt;/p>
&lt;p>This toggle only applies to sessions that are using this course.&lt;/p>
&lt;h3 id="keep_vm">&lt;code>keep_vm&lt;/code>&lt;/h3>
&lt;p>This field defines whether HobbyFarm should spawn VMs independently for each scenario in the course, or a &amp;ldquo;persistent&amp;rdquo; set of VMs that live for the duration of the course and are reused in each scenario.&lt;/p>
&lt;p>Setting this field to &lt;code>true&lt;/code> causes HobbyFarm to create persistent VMs that live for the life of the course.&lt;/p>
&lt;p>Setting this field to &lt;code>false&lt;/code> causes HobbyFarm to spawn (or claim, depending on provisioning method) unique VMs for each scenario.&lt;/p></description></item><item><title>Docs: Environment</title><link>http://hobbyfarm.github.io/docs/architecture/resources/environment/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://hobbyfarm.github.io/docs/architecture/resources/environment/</guid><description>
&lt;p>An &lt;code>Environment&lt;/code> defines specific implementation details on how HobbyFarm connects to a provider for scheduling virtual machines. An environment resource contains configuration information such as where provider credentials are stored, what image to use when creating a VM, or how much capacity a provider has for a specific type of VM.&lt;/p>
&lt;p>Here&amp;rsquo;s an example environment manifest:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm.io/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Environment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">sample-environment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm-system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">count_capacity&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">example-template&lt;/span>: &lt;span style="color:#ae81ff">500&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">display_name&lt;/span>: &lt;span style="color:#ae81ff">sample-environment&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">environment_specifics&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cred_secret&lt;/span>: &lt;span style="color:#ae81ff">sample-environment-creds&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">region&lt;/span>: &lt;span style="color:#ae81ff">us-east-1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">subnet&lt;/span>: &lt;span style="color:#ae81ff">subnet-09823djk&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">vpc_security_group_id&lt;/span>: &lt;span style="color:#ae81ff">sg-09823iwedlijqd39&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">provider&lt;/span>: &lt;span style="color:#ae81ff">aws&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">template_mapping&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">example-template&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">ami-098230498234&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">size&lt;/span>: &lt;span style="color:#ae81ff">t3.medium&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ws_endpoint&lt;/span>: &lt;span style="color:#ae81ff">ws.your-hobbyfarm.io&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;h3 id="count_capacity">&lt;code>count_capacity&lt;/code>&lt;/h3>
&lt;p>This field is a &lt;code>map[string]int&lt;/code> designed to inform HobbyFarm about the capacity of the environment for a particular VM template. Each key in this map is the name of the VM template, and the value is the number of total VMs of that type that the environment can support.&lt;/p>
&lt;p>For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">count_capacity&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">example-template&lt;/span>: &lt;span style="color:#ae81ff">100&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The above example indicates that at any given point in time, the environment can support up to 100 total &lt;code>example-template&lt;/code> VMs.&lt;/p>
&lt;p>This map should be set according to what resources an environment has. Take care to account for multiple templates and totals that will affect the amount of instances, cpu, memory, etc. that are consumed in the provider.&lt;/p>
&lt;h3 id="display_name">&lt;code>display_name&lt;/code>&lt;/h3>
&lt;p>Display name for the environment.&lt;/p>
&lt;h3 id="environment_specifics">&lt;code>environment_specifics&lt;/code>&lt;/h3>
&lt;p>This field is a &lt;code>map[string]string&lt;/code> designed to inform HobbyFarm about specific values for the environment. Entries in this map are utilized by VM provisioners for purposes such as security group ID, VPC, etc. The keys defined here are specific to the provisioner in use for the environment. Each provisioner may have specific values that are required.&lt;/p>
&lt;h3 id="provider">&lt;code>provider&lt;/code>&lt;/h3>
&lt;p>This field is used to determine what provisioner should be utilized for an environment.&lt;/p>
&lt;p>The logic behind this field is somewhat complicated due to the original use of only Terraform for VM provisioning. The field originally informed HobbyFarm what Terraform module to use when provisioning.&lt;/p>
&lt;p>With the advent of external provisioners this field now determines what external provisioner is used. When used in combination with the annotation &lt;code>hobbyfarm.io/provisioner: external&lt;/code>, a matching external provisioner (to the &lt;code>provider&lt;/code> field) will be used.&lt;/p>
&lt;h3 id="template_mapping">&lt;code>template_mapping&lt;/code>&lt;/h3>
&lt;p>This field is a &lt;code>map[string]string&lt;/code> allowing administrators to configure specific values for each VM template in use in the environment. Some common uses of this map are for elements such as instance size or AMI.&lt;/p>
&lt;p>The keys defined here are specific to the provisioner in use for the environment. Each provisioner may have specific values that are required.&lt;/p>
&lt;h3 id="ws_endpoint">&lt;code>ws_endpoint&lt;/code>&lt;/h3>
&lt;p>This field defines which websocket (shell) endpoint should be used by end-user clients to open a shell to VMs provisioned in this environment. This field may be used in situations where a specific shell server needs to be utilized. An example of this may be an environment where the shell server needs to be in a DMZ in order to access VMs that are otherwise isolated from the main HobbyFarm install.&lt;/p></description></item><item><title>Docs: PredefinedService</title><link>http://hobbyfarm.github.io/docs/architecture/resources/predefinedservice/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://hobbyfarm.github.io/docs/architecture/resources/predefinedservice/</guid><description>
&lt;p>A &lt;code>PredefinedService&lt;/code> is a way to provide preconfigured Services that are usible when creating or updating &lt;code>VirtualMachineTemplates&lt;/code> inside the Admin-UI.&lt;/p>
&lt;p>Example manifest:
Look at the bottom of page for more Example Services.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm.io/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">PredefinedService&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">another-service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm-system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">install Code-Server IDE&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cloud_config&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> runcmd:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - export HOME=/root
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - curl -fsSL https://code-server.dev/install.sh &amp;gt; codeServerInstall.sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - /bin/sh codeServerInstall.sh &amp;amp;&amp;amp; systemctl enable --now code-server@root
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - &amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> sleep 5 &amp;amp;&amp;amp; sed -i.bak &amp;#39;s/auth: password/auth: none/&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> ~/.config/code-server/config.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - sudo systemctl restart code-server@root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">has_webinterface&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">has_tab&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">port&lt;/span>: &lt;span style="color:#ae81ff">8080&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">/?path=/root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">rewrite_host_header&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">no_rewrite_root_path&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">rewrite_origin_header&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">disallow_iframe&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;h3 id="name">&lt;code>name&lt;/code>&lt;/h3>
&lt;p>Display name for the Service inside the UI.&lt;/p>
&lt;h3 id="cloud_config">&lt;code>cloud_config&lt;/code>&lt;/h3>
&lt;p>default: &amp;quot;&amp;quot; (empty string)&lt;/p>
&lt;p>Cloud-Config data. See [documentation]https://cloudinit.readthedocs.io/en/latest/&lt;/p>
&lt;blockquote>
&lt;p>This has to be supported by the operator or the terraform module.&lt;/p>
&lt;/blockquote>
&lt;h3 id="has_webinterface">&lt;code>has_webinterface&lt;/code>&lt;/h3>
&lt;p>default: false&lt;/p>
&lt;p>If the service provides a Webinterface that can be proxied to the user. The proxy will connect to the server via ssh and tunnel the webinterface located at the configured port to the user.&lt;/p>
&lt;h3 id="has_tab">&lt;code>has_tab&lt;/code>&lt;/h3>
&lt;p>default: false&lt;/p>
&lt;p>All webinterfaces are grouped inside a submenu next to the terminal tabs.
If &lt;code>has_tab&lt;/code> is set to true the webinterface will be get its own tab next to the terminal tabs. The tab will be named after the virtual machine and the display name of the service.&lt;/p>
&lt;h3 id="port">&lt;code>port&lt;/code>&lt;/h3>
&lt;p>default: 0&lt;/p>
&lt;p>The port to which the application is exposed. The proxy will tunnel &lt;code>localhost:[port]&lt;/code>.&lt;/p>
&lt;h3 id="path">&lt;code>path&lt;/code>&lt;/h3>
&lt;p>default: &amp;quot;&amp;quot; (empty string)&lt;/p>
&lt;p>Some applications may provide different paths or entrypoint to be called like &lt;code>/dashboard&lt;/code>. When &lt;code>path&lt;/code> is defined the first page that is loaded will be the given path.&lt;/p>
&lt;h3 id="rewrite_host_header">&lt;code>rewrite_host_header&lt;/code>&lt;/h3>
&lt;p>default: true&lt;/p>
&lt;p>The proxy will rewrite the host header of requests to the proxy/shell server host.&lt;/p>
&lt;h3 id="no_rewrite_root_path">&lt;code>no_rewrite_root_path&lt;/code>&lt;/h3>
&lt;p>default: false&lt;/p>
&lt;p>The proxy will rewrite the requested path &lt;code>/p/[vm-id]/80/path/to/application&lt;/code> to &lt;code>/path/to/application&lt;/code> when calling the server. Set this flag to &lt;code>true&lt;/code> when you want the proxy so send the whole path. This is needed by some applications like Jupyter when providing a &lt;code>base_url&lt;/code> parameter.&lt;/p>
&lt;h3 id="rewrite_origin_header">&lt;code>rewrite_origin_header&lt;/code>&lt;/h3>
&lt;p>default: false&lt;/p>
&lt;p>The proxy will rewrite the origin header of requests to localhost&lt;/p>
&lt;h3 id="disallow_iframe">&lt;code>disallow_iframe&lt;/code>&lt;/h3>
&lt;p>default: false&lt;/p>
&lt;p>Disallow the webinterface inside iFrame tabs, the user will have to open the webinterface inside a new tab.&lt;/p>
&lt;h2 id="example-predefinedservices">Example PredefinedServices:&lt;/h2>
&lt;h3 id="docker">Docker&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm.io/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">PredefinedService&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">docker-service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm-system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">install Docker&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cloud_config&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> runcmd:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - curl -fsSL get.docker.com | bash
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> has_tab: true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="code-server">Code-Server&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm.io/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">PredefinedService&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">code-server-service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm-system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Code-Server IDE&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">port&lt;/span>: &lt;span style="color:#ae81ff">8080&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cloud_config&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> runcmd:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - export HOME=/root
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - curl -fsSL https://code-server.dev/install.sh &amp;gt; codeServerInstall.sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - /bin/sh codeServerInstall.sh &amp;amp;&amp;amp; systemctl enable --now code-server@root
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - &amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> sleep 5 &amp;amp;&amp;amp; sed -i.bak &amp;#39;s/auth: password/auth: none/&amp;#39;
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> ~/.config/code-server/config.yaml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - sudo systemctl restart code-server@root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">has_tab&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">has_webinterface&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">/?path=/root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">rewrite_host_header&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">no_rewrite_root_path&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">rewrite_origin_header&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">disallow_iframe&lt;/span>: &lt;span style="color:#66d9ef">false&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="jupyter">Jupyter&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm.io/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">PredefinedService&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">jupyter-service&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm-system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Jupyter&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">port&lt;/span>: &lt;span style="color:#ae81ff">8888&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cloud_config&lt;/span>: |&lt;span style="color:#e6db74">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> #cloud-config
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> runcmd:
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - apt-get update &amp;amp;&amp;amp; apt-get install python3-pip -y
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#e6db74"> - pip install jupyterlab markupsafe==2.0.1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">has_tab&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">has_webinterface&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">path&lt;/span>: &lt;span style="color:#ae81ff">/&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">rewrite_origin_header&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">disallow_iframe&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Scenario</title><link>http://hobbyfarm.github.io/docs/architecture/resources/scenario/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://hobbyfarm.github.io/docs/architecture/resources/scenario/</guid><description>
&lt;p>Scenarios are the main content resource in HobbyFarm. They contain a series of steps which are presented to the end-user during a session. Scenarios also configure what VM templates are necessary for use of the scenario.&lt;/p>
&lt;p>Here&amp;rsquo;s an example scenario:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm.io/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Scenario&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">example-scenario&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm-system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">RXhhbXBsZSBTY2VuYXJpbwo=&lt;/span> &lt;span style="color:#75715e"># &amp;#34;Example Scenario&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">description&lt;/span>: &lt;span style="color:#ae81ff">VGhpcyBpcyBhbiBleGFtcGxlIHNjZW5hcmlvCg==&lt;/span> &lt;span style="color:#75715e"># &amp;#34;This is an example scenario&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">steps&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">title&lt;/span>: &lt;span style="color:#ae81ff">U3RlcCAxCg==&lt;/span> &lt;span style="color:#75715e"># &amp;#34;Step 1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">content&lt;/span>: &lt;span style="color:#ae81ff">VGhpcyBpcyB0aGUgY29udGVudCBmb3Igc3RlcCAxCg==&lt;/span> &lt;span style="color:#75715e"># &amp;#34;This is the content for step 1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#f92672">title&lt;/span>: &lt;span style="color:#ae81ff">U3RlcCAyCg==&lt;/span> &lt;span style="color:#75715e"># &amp;#34;Step 2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">content&lt;/span>: &lt;span style="color:#ae81ff">VGhpcyBpcyB0aGUgY29udGVudCBmb3Igc3RlcCAyCg==&lt;/span> &lt;span style="color:#75715e"># &amp;#34;This is the content for step 2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">categories&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">learning&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">cloud-native&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">tags&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">cool-scenario&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">example&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">great-content&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">virtual_machines&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">machine01&lt;/span>: &lt;span style="color:#ae81ff">ubuntu-2004&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">cluster01&lt;/span>: &lt;span style="color:#ae81ff">sles-15-sp4&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">keepalive_duration&lt;/span>: &lt;span style="color:#ae81ff">90m &lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">pause_duration&lt;/span>: &lt;span style="color:#ae81ff">4h&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">pauseable&lt;/span>: &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;h3 id="name">&lt;code>name&lt;/code>&lt;/h3>
&lt;p>Display name for the scenario as shown in both the end-user UI and admin UI. This field should be base64 encoded.&lt;/p>
&lt;h3 id="description">&lt;code>description&lt;/code>&lt;/h3>
&lt;p>A brief description of the scenario shown under the title in the end-user UI. This field should be base64 encoded.&lt;/p>
&lt;h3 id="steps">&lt;code>steps&lt;/code>&lt;/h3>
&lt;p>This field contains a list of steps which (in order) are the steps displayed to the end-user. Each step is an object containing two fields, &lt;code>title&lt;/code> and &lt;code>content&lt;/code>. The value of each of these fields should be base64-encoded.&lt;/p>
&lt;h3 id="categories">&lt;code>categories&lt;/code>&lt;/h3>
&lt;p>This field lists categories to which the scenario belongs. Categories are used in &lt;a href="course.md">Courses&lt;/a> to dynamically include scenarios based on queries.&lt;/p>
&lt;h3 id="tags">&lt;code>tags&lt;/code>&lt;/h3>
&lt;p>This field lists tags applied to the scenario. Tags are used in the admin UI to quickly search for scenarios matching desired content.&lt;/p>
&lt;h3 id="virtual_machines">&lt;code>virtual_machines&lt;/code>&lt;/h3>
&lt;p>This field is a &lt;code>map[string]string&lt;/code> listing each virtual machine that is required for the scenario. The key is the name of the VM (as used in both the end-user UI &lt;em>and&lt;/em> the variable content in the steps), and the value is the VM template which &amp;ldquo;backs&amp;rdquo; that VM.&lt;/p>
&lt;h3 id="keepalive_duration">&lt;code>keepalive_duration&lt;/code>&lt;/h3>
&lt;p>This field defines the duration of time after which a user&amp;rsquo;s VMs can be destroyed by HobbyFarm upon user inactivity. In other words, if a user becomes inactive (their instance of the end-user UI stops sending pings to the server) this is the duration of time HobbyFarm will wait before reclaiming their resources.&lt;/p>
&lt;p>Acceptable values for this field are of the form &lt;code>XXm&lt;/code> or &lt;code>XXh&lt;/code> where &lt;code>XX&lt;/code> is a positive integer that denotes minutes or hours of time.&lt;/p>
&lt;h3 id="pause_duration">&lt;code>pause_duration&lt;/code>&lt;/h3>
&lt;p>This field defines the duration of time a user is able to pause their session. The end-user UI contains a button that allows (if enabled) a user to stop the keepalive countdown. This permits the user to take actions that otherwise may result in VM teardown, such as closing their laptop or disconnecting their Internet connection. If a user pauses their session, HobbyFarm will wait until this duration expires before once again reenabling the keepalive duration. Thus the maximum time a user can be paused &lt;em>and&lt;/em> inactive is the sum of &lt;code>keepalive_duration&lt;/code> and &lt;code>pause_duration&lt;/code>.&lt;/p>
&lt;p>Acceptable values for this field are of the form &lt;code>XXm&lt;/code> or &lt;code>XXh&lt;/code> where &lt;code>XX&lt;/code> is a positive integer that denotes minutes or hours of time.&lt;/p>
&lt;h3 id="pauseable">&lt;code>pauseable&lt;/code>&lt;/h3>
&lt;p>This field determines whether an end-user may pause their session. &lt;code>true&lt;/code> enables the pausing of sessions, &lt;code>false&lt;/code> disables it.&lt;/p>
&lt;p>This toggle only applies to sessions that are using this scenario.&lt;/p></description></item><item><title>Docs: ScheduledEvent</title><link>http://hobbyfarm.github.io/docs/architecture/resources/scheduledevent/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://hobbyfarm.github.io/docs/architecture/resources/scheduledevent/</guid><description>
&lt;p>We are currently working on this&amp;hellip;&lt;/p>
&lt;p>TODO: Example&lt;/p>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>ScheduledEvents created through the Admin-UI. You should never have to create or update scheduledevents yourself.&lt;/p>
&lt;p>TODO: Fields of ScheduledEvent CRD&lt;/p></description></item><item><title>Docs: Session</title><link>http://hobbyfarm.github.io/docs/architecture/resources/session/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://hobbyfarm.github.io/docs/architecture/resources/session/</guid><description>
&lt;p>In HobbyFarm, a session is defined as a user currently executing a scenario or course. The Session resource in HobbyFarm tracks that occurrence, storing information such as the start time of the user, which scenario or course is being executed, etc.&lt;/p>
&lt;blockquote>
&lt;p>⚠️ Sessions are always created by HobbyFarm&amp;rsquo;s code. Except in very rare, surgical operations, you should not create a Session resource via the Kubernetes API. You may view the Session in this manner but creating one outside of HobbyFarm&amp;rsquo;s code is not a supported operation.&lt;/p>
&lt;/blockquote>
&lt;p>Here&amp;rsquo;s an example Session:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm.io/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Session&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">sample-session&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm-system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">scenario&lt;/span>: &lt;span style="color:#ae81ff">s-lkjsdflkjs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">course&lt;/span>: &lt;span style="color:#ae81ff">c-lkjsdflkjs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">keep_course_vm&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">user&lt;/span>: &lt;span style="color:#ae81ff">u-lkjsdflkjs&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">vm_claim&lt;/span>: &lt;span style="color:#ae81ff">vmc-lkjsdflkjsf&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">access_code&lt;/span>: &lt;span style="color:#ae81ff">ac-ljw4s4dsdf&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">status&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">paused&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">pause_time&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">active&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">finished&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;false&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">start_time&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2006-01-02 15:04:05.999999999 -0700 MST&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">end_time&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;2006-01-02 17:04:05.999999999 -0700 MST&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;h3 id="scenario">&lt;code>scenario&lt;/code>&lt;/h3>
&lt;p>Id of the scenario that the user is currently executing.&lt;/p>
&lt;h3 id="course">&lt;code>course&lt;/code>&lt;/h3>
&lt;p>If the user is executing a scenario in the context of a course, this field tracks the course id.&lt;/p>
&lt;h3 id="keep_course_vm">&lt;code>keep_course_vm&lt;/code>&lt;/h3>
&lt;p>Whether or not HobbyFarm should keep the VMs referenced by this session for the duration of the Course.&lt;/p>
&lt;h3 id="user">&lt;code>user&lt;/code>&lt;/h3>
&lt;p>Id of the user that owns this session.&lt;/p>
&lt;h3 id="vm_claim">&lt;code>vm_claim&lt;/code>&lt;/h3>
&lt;p>Id of the VirtualMachineClaim that this session owns.&lt;/p>
&lt;h3 id="access_code">&lt;code>access_code&lt;/code>&lt;/h3>
&lt;p>Id of the AccessCode that granted access to this scenario/course.&lt;/p>
&lt;h3 id="statuspaused">&lt;code>status.paused&lt;/code>&lt;/h3>
&lt;p>Whether or not the user has paused the session.&lt;/p>
&lt;h3 id="statuspause_time">&lt;code>status.pause_time&lt;/code>&lt;/h3>
&lt;p>Time stamp marking when the user paused their session.&lt;/p>
&lt;h3 id="statusactive">&lt;code>status.active&lt;/code>&lt;/h3>
&lt;p>Whether or not this session is active.&lt;/p>
&lt;h3 id="statusfinished">&lt;code>status.finished&lt;/code>&lt;/h3>
&lt;p>Whether or not this session has concluded.&lt;/p>
&lt;h3 id="statusstart_time">&lt;code>status.start_time&lt;/code>&lt;/h3>
&lt;p>The timestamp when this session was created.&lt;/p>
&lt;h3 id="statusend_time">&lt;code>status.end_time&lt;/code>&lt;/h3>
&lt;p>The timestamp after which point the session expires and is concluded. This timestamp is continuously updated as the end-user UI sends &amp;ldquo;keepalive&amp;rdquo; messages to the HobbyFarm API endpoint. Every keepalive message advances the timestamp. This prevents an active user from getting disconnected, but more importantly allows HobbyFarm to reclaim resources from users who have closed their browsers or otherwise gone inactive.&lt;/p></description></item><item><title>Docs: User</title><link>http://hobbyfarm.github.io/docs/architecture/resources/user/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://hobbyfarm.github.io/docs/architecture/resources/user/</guid><description>
&lt;p>Users are represented in HobbyFarm via the &lt;code>User&lt;/code> resource.&lt;/p>
&lt;p>Here&amp;rsquo;s an example of that resource:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm.io/v2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">User&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">example-user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">namesapce&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm-system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">email&lt;/span>: &lt;span style="color:#ae81ff">user@example.com&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">password&lt;/span>: &lt;span style="color:#ae81ff">$6p$01$LJsdflisn3d9jrlkjdf&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">access_codes&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">event01&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#ae81ff">demo99&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">settings&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ctr_enabled&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">ctxAccessCode&lt;/span>: &lt;span style="color:#ae81ff">example-access-code&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">terminal_fontSize&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;16&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">terminal_theme&lt;/span>: &lt;span style="color:#ae81ff">Solarized_Dark_Higher_Contrast&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>Most user accounts are created through registration via the end-user UI. You should only need to manually create or adjust accounts for users that need access to the admin UI.&lt;/p>
&lt;h3 id="email">&lt;code>email&lt;/code>&lt;/h3>
&lt;p>This field determines the username for the user. During original development of HobbyFarm it was assumed that all users would login using an email address and password. However, no validation in HobbyFarm or any UI forces an email to be used for this field.&lt;/p>
&lt;p>&lt;em>Therefore it is acceptable to treat this field as a synonym for username.&lt;/em>&lt;/p>
&lt;h3 id="password">&lt;code>password&lt;/code>&lt;/h3>
&lt;p>This is the bcrypt&amp;rsquo;ed password of the user. This field is set when a user registers in the end-user UI. It can be changed via the admin UI.&lt;/p>
&lt;h3 id="access_codes">&lt;code>access_codes&lt;/code>&lt;/h3>
&lt;p>These are the access codes (not resource names, but actual codes) that the user has entered in the end-user UI. If matched to an access code these will grant access to content in HobbyFarm.&lt;/p>
&lt;h3 id="settings">&lt;code>settings&lt;/code>&lt;/h3>
&lt;p>Settings of users are stored in their ressource as a &lt;code>map[string]string&lt;/code>. The following options are currently available:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Key&lt;/th>
&lt;th>Default&lt;/th>
&lt;th>Purpose&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>ctr_enabled&lt;/code>&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>If CTRs enabled&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>ctxAccessCode&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;lt;empty-string&amp;gt;&lt;/code>&lt;/td>
&lt;td>Selected Context AccessCode&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>terminal_fontSize&lt;/code>&lt;/td>
&lt;td>&lt;code>16&lt;/code>&lt;/td>
&lt;td>Terminal Font-Size&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>terminal_theme&lt;/code>&lt;/td>
&lt;td>&lt;code>default&lt;/code>&lt;/td>
&lt;td>Terminal Theme&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="admin-access">Admin Access&lt;/h2>
&lt;p>By default users do not have access to the admin dashboard.
Granting access to resources works via kubernetes native Roles and RoleBindings&lt;/p>
&lt;p>You can create new Roles via the admin dashboard or use one of the predefined Roles created by gargantua when providing the flag &lt;code>-installrbacroles&lt;/code>&lt;/p>
&lt;p>A Role granting access to all Resources would look like the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">rbac.authorization.k8s.io/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Role&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">rbac.hobbyfarm.io/managed&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm-admin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">namespace&lt;/span>: {{ &lt;span style="color:#ae81ff">.Release.Namespace }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">rules&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">apiGroups&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;hobbyfarm.io&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">resources&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">verbs&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">apiGroups&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;rbac.authorization.k8s.io&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">resources&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;roles&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;rolebindings&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">verbs&lt;/span>: [&lt;span style="color:#e6db74">&amp;#34;*&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To grant a user this role you would give him access via the Admin-UI or create a RoleBinding:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">rbac.authorization.k8s.io/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">RoleBinding&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">labels&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">rbac.hobbyfarm.io/managed&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm-admin-rolebinding&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">namespace&lt;/span>: {{ &lt;span style="color:#ae81ff">.Release.Namespace }}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">subjects&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">User&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">&amp;lt;id-of-user&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">apiGroup&lt;/span>: &lt;span style="color:#ae81ff">rbac.authorization.k8s.io&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">roleRef&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">Role&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm-admin&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">apiGroup&lt;/span>: &lt;span style="color:#ae81ff">rbac.authorization.k8s.io&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Virtual Machine Template</title><link>http://hobbyfarm.github.io/docs/architecture/resources/virtualmachinetemplate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://hobbyfarm.github.io/docs/architecture/resources/virtualmachinetemplate/</guid><description>
&lt;p>A &lt;code>VirtualMachineTemplate&lt;/code> is a provider-agnostic representation of a template for a VM. It allows HobbyFarm to schedule resources across multiple providers while providing a common definition for content creators.&lt;/p>
&lt;p>Here&amp;rsquo;s a sample virtual machine manifest:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">apiVersion&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm.io/v1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">kind&lt;/span>: &lt;span style="color:#ae81ff">VirtualMachineTemplate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">metadata&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">example-vmt&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">namespace&lt;/span>: &lt;span style="color:#ae81ff">hobbyfarm-system&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">spec&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">name&lt;/span>: &lt;span style="color:#ae81ff">Example VMTemplate&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">image&lt;/span>: &lt;span style="color:#ae81ff">ami-08921390234098&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#f92672">config_map&lt;/span>: {&lt;span style="color:#f92672">&amp;#34;key&amp;#34;: &amp;#34;value&amp;#34;, &amp;#34;another_key&amp;#34;: &lt;/span>&lt;span style="color:#ae81ff">... [] ...}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A VM template is merely a representation of a possible VM implementation by a provider. For example, in AWS this template may correspond to the creation of a &lt;code>t3.medium&lt;/code> whereas in Azure it may correspond to &lt;code>Standard_D2_v2&lt;/code>. It is up to each &lt;code>Environment&lt;/code> to determine how to implement a &lt;code>VirtualMachineTemplate&lt;/code>.&lt;/p>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;h3 id="name">&lt;code>name&lt;/code>&lt;/h3>
&lt;p>Display name for the VM template.&lt;/p>
&lt;h3 id="image">&lt;code>image&lt;/code>&lt;/h3>
&lt;p>Default value for the image to use when provisioning this VM. Acceptable values will depend upon the provisioner in use. Useful either as a default value for a default provisioner, or when multiple environments use the same provisioner. Can be overridden via configuration in the &lt;code>Environment&lt;/code> resource.&lt;/p>
&lt;h3 id="config_map">&lt;code>config_map&lt;/code>&lt;/h3>
&lt;p>The ConfigMap provides the ability to customize more values given to the provisioner. Useful if the provisioner can distinguish between Regions or different sizing options.&lt;/p>
&lt;p>An example for a configmap vor VMs on Hetzner could look the following&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">server_type&lt;/span>: &lt;span style="color:#ae81ff">cx21&lt;/span> &lt;span style="color:#75715e"># Hetzner has available sizings cx11, cx21, cx31 ...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">ssh_username&lt;/span>: &lt;span style="color:#ae81ff">root&lt;/span> &lt;span style="color:#75715e"># Default SSH Username is root&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">location&lt;/span>: &lt;span style="color:#ae81ff">nbg1&lt;/span> &lt;span style="color:#75715e"># Region&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="cloud-init-configuration">Cloud-Init configuration&lt;/h2>
&lt;p>&lt;code>VirtualMachineTemplates&lt;/code> may offer Cloud-Init configuration. Currently this is saved under the &lt;code>cloud-config&lt;/code> key inside the &lt;code>config_map&lt;/code>.
This is supposed to be changed to be saved in it&amp;rsquo;s own field inside the VMT.&lt;/p>
&lt;h2 id="services-and-webinterfaces">Services and Webinterfaces&lt;/h2>
&lt;p>Services and webinterfaces can be configured for VMTs. A Service may provide a webinterface on a specific port and path which will be shown to the user in an iFrame. This webinterface will be proxied to ensure authorization.
Currently this should be configured through the UI as it is stored in an array under the &lt;code>webinterfaces&lt;/code> key inside the &lt;code>config_map&lt;/code>.
You can define presets of often used services using &lt;a href="http://hobbyfarm.github.io/docs/architecture/resources/predefinedservice/">PredefinedServices&lt;/a>.&lt;/p></description></item></channel></rss>